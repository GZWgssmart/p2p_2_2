<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.we.dao.RoleDAO" >
  <resultMap id="BaseResultMap" type="com.we.bean.Role" >
    <id column="jid" property="jid" jdbcType="INTEGER" />
    <result column="rname" property="rname" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    jid, rname, content
  </sql>
  <select id="getById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from role
    where jid = #{jid,jdbcType=INTEGER}
  </select>
  <delete id="removeById" parameterType="java.lang.Integer" >
    delete from role
    where jid = #{jid,jdbcType=INTEGER}
  </delete>
  <insert id="save" parameterType="com.we.bean.Role" >
    <selectKey keyProperty="jid" order="AFTER" resultType="java.lang.Integer">
    SELECT LAST_INSERT_ID()
    </selectKey>
    insert into role ( rname, content,create_time
      )
    values (#{rname,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR},
      #{createTime}
      )
  </insert>
  <insert id="saveSelective" parameterType="com.we.bean.Role" >
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="jid != null" >
        jid,
      </if>
      <if test="rname != null" >
        rname,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="jid != null" >
        #{jid,jdbcType=INTEGER},
      </if>
      <if test="rname != null" >
        #{rname,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateSelective" parameterType="com.we.bean.Role" >
    update role
    <set >
      <if test="rname != null" >
        rname = #{rname,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
    </set>
    where jid = #{jid,jdbcType=INTEGER}
  </update>
  <update id="update" parameterType="com.we.bean.Role" >
    update role
    set rname = #{rname,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR}
    where jid = #{jid,jdbcType=INTEGER}
  </update>


  <select id="listPager" resultType="com.we.bean.Role">
    select * from role  order by create_time desc
    <if test="pager.offset != null and pager.limit!= null" >
      limit #{pager.offset}, #{pager.limit}
    </if>

  </select>

  <select id="countAll" resultType="java.lang.Long">
    select count(jid) from role
  </select>

  <select id="listCriteria" resultType="com.we.bean.Role" parameterType="com.we.vo.RoleSerachVO">
    <![CDATA[
        select * from role
    ]]>
    <include refid="commonCriteriaSQL"/>
  </select>

  <select id="countCriteria" resultType="java.lang.Long">
    <![CDATA[
        select count(jid) from role
    ]]>
    <include refid="commonCriteriaSQL"/>
  </select>

  <select id="deletes" >
    delete from role WHERE jid IN
    <foreach collection="roleIds" item="roleId" separator="," open="(" close=")">
      #{roleId}
    </foreach>
  </select>

  <select id="listTreeVO" resultType="com.we.vo.RoleZTreeVO">
    select r.jid as id,rname as name from role r order by create_time desc
  </select>

  <sql id="commonCriteriaSQL">
    <where>
        <if test="query != null and query.rname != null and query.rname !=''">
          and rname  like concat('%', #{query.rname}, '%')
        </if>
        <if test="query != null and query.content != null and query.content !=''">
          and content  like concat('%', #{query.content}, '%')
        </if>
    </where>

  </sql>
</mapper>