<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.we.dao.HuserDAO">
    <resultMap id="BaseResultMap" type="com.we.bean.Huser">
        <id column="huid" property="huid" jdbcType="INTEGER"/>
        <result column="rname" property="rname" jdbcType="VARCHAR"/>
        <result column="sex" property="sex" jdbcType="VARCHAR"/>
        <result column="phone" property="phone" jdbcType="CHAR"/>
        <result column="huname" property="huname" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    huid, rname, sex, phone, huname, email,password,create_time
  </sql>
    <select id="getById" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from huser
        where huid = #{huid,jdbcType=INTEGER}
    </select>
    <delete id="removeById" parameterType="java.lang.Integer">
    delete from huser
    where huid = #{huid,jdbcType=INTEGER}
  </delete>
    <insert id="save" parameterType="com.we.bean.Huser">
        <selectKey keyProperty="huid" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into huser (huid, rname, sex,
        phone, huname,email,create_time,password)
        values (#{huid,jdbcType=INTEGER}, #{rname,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR},
        #{phone,jdbcType=CHAR}, #{huname,jdbcType=VARCHAR},
        #{email,jdbcType=VARCHAR},#{createTime},#{password})
    </insert>
    <insert id="saveSelective" parameterType="com.we.bean.Huser">
        insert into huser
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="huid != null">
                huid,
            </if>
            <if test="rname != null">
                rname,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="huname != null">
                huname,
            </if>
            <if test="email != null">
                email,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="huid != null">
                #{huid,jdbcType=INTEGER},
            </if>
            <if test="rname != null">
                #{rname,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=CHAR},
            </if>
            <if test="huname != null">
                #{huname,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="update" parameterType="com.we.bean.Huser">
        update huser
        <set>
            <if test="rname != null">
                rname = #{rname,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=CHAR},
            </if>
            <if test="huname != null">
                huname = #{huname,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password}
            </if>
        </set>
        where huid = #{huid,jdbcType=INTEGER}
    </update>

    <select id="listCriteria" resultType="com.we.bean.Huser">
        select * from huser where huname !='superadmin' order by create_time desc
        <if test="pager.offset != null and pager.limit != null">
            limit #{pager.offset},#{pager.limit}
        </if>

    </select>

    <select id="countCriteria" resultType="long">
      select count(huid) from huser
    </select>

    <delete id="deletes">
        delete from huser WHERE huid IN
        <foreach collection="huserIds" item="huserId" separator="," open="(" close=")">
            #{huserId}
        </foreach>
    </delete>

    <select id="getByName" resultType="huser">
        select * from huser where rname = #{name};
    </select>

    <select id="getRolesByName" resultType="String">
        select r.rname from huser h,roleuser ru,role r
        where h.huid = ru.huid and ru.rid = r.jid and h.rname = #{name};
    </select>

    <select id="getPermissionsByName" resultType="String">
        select j.perms from huser h,roleuser ru,role r,rolejur rj,jur j where
          h.huid = ru.huid and ru.rid = r.jid and r.jid = rj.rid
          and rj.jid = j.id and h.rname = #{name};
    </select>

    <select id="getByEmail" resultType="huser">
        select * from huser where email = #{email};
    </select>

    <select id="getRolesByEmail" resultType="String">
        select r.rname from huser h,roleuser ru,role r
        where h.huid = ru.huid and ru.rid = r.jid and h.email = #{email};
    </select>

    <select id="getPermissionsByEmail" resultType="String">
        select j.perms from huser h,roleuser ru,role r,rolejur rj,jur j where
          h.huid = ru.huid and ru.rid = r.jid and r.jid = rj.rid
          and rj.jid = j.id and h.email = #{email};
    </select>

    <select id="getByPhone" resultType="huser">
       select * from huser where phone = #{phone};
    </select>

    <select id="getRolesByPhone" resultType="String">
        select r.rname from huser h,roleuser ru,role r
        where h.huid = ru.huid and ru.rid = r.jid and h.phone = #{phone};
    </select>

    <select id="getPermissionsByPhone" resultType="String">
        select j.perms from huser h,roleuser ru,role r,rolejur rj,jur j where
          h.huid = ru.huid and ru.rid = r.jid and r.jid = rj.rid
          and rj.jid = j.id and h.phone = #{phone};
    </select>
</mapper>